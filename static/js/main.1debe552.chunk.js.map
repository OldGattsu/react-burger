{"version":3,"sources":["components/ingredient-details/ingredient-details.module.css","components/modal/modal.module.css","components/burger-constructor/burger-constructor.module.css","reportWebVitals.ts","utils/api-helper.js","store/actions/ingredients.js","components/menu/menu.js","components/menu-link/menu-link.js","components/app-header/app-header.js","store/actions/ingredient.js","components/modal-overlay/modal-overlay.js","components/modal/modal.js","components/ingredient-card/ingredient-card.js","components/ingredients-category/ingredients-category.js","components/ingredient-details/ingredient-details.js","utils/methods.js","components/burger-ingredients/burger-ingredients.js","store/actions/burgerConstructor.js","store/actions/order.js","components/selected-ingredient-card/selected-ingredient-card.js","images/order-done.svg","components/order-details/order-details.js","images/drag-here.svg","components/drag-here/drag-here.js","components/loader/loader.js","components/burger-constructor/burger-constructor.js","components/app/app.js","store/reducers/ingredients.js","store/reducers/burgerConstructor.js","store/reducers/ingredient.js","store/reducers/order.js","store/reducers/index.js","store/index.js","index.js","components/order-details/order-details.module.css","components/ingredient-card/ingredient-card.module.css","components/drag-here/drag-here.module.css","components/menu-link/menu-link.module.css","components/burger-ingredients/burger-ingredients.module.css","components/modal-overlay/modal-overlay.module.css","components/app-header/app-header.module.css","components/menu/menu.module.css","components/ingredients-category/ingredients-category.module.css","components/app/app.module.css","components/selected-ingredient-card/selected-ingredient-card.module.css","components/loader/loader.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","checkReponse","res","ok","json","err","Promise","reject","sendRequest","endpoint","options","fetch","process","getIngredients","createAsyncThunk","a","incrementIngredientCount","createAction","decrementIngredientCount","clearIngredientsCounters","Menu","children","className","styles","menu","menuList","MenuLink","name","icon","iconHover","first","last","useState","isHover","setHover","clsx","menuLink","href","onMouseEnter","onMouseLeave","menuLinkIcon","menuLinkName","AppHeader","appHeader","type","logo","setShownIngredient","unsetShownIngredient","modalRoot","document","getElementById","ModalOverlay","onClose","noBlackout","ReactDOM","createPortal","modalOverlay","modalOverlayNoBlackout","onClick","e","target","classList","contains","Modal","title","modalRef","useRef","handleEscClose","keyCode","useEffect","addEventListener","removeEventListener","modal","ref","modalCloseIcon","modalTitle","modalTitleText","modalTitleIcon","modalContent","IngredientCard","id","count","img","price","onShow","useDrag","item","collect","monitor","opacity","isDragging","ingredientCard","style","ingredientCardImage","src","alt","ingredientCardPrice","ingredientCardName","size","IngredientsCategory","forwardRef","data","onCardShow","ingredientsCategory","ingredientsCategoryContainer","map","ingredient","_id","image","IngredientDetails","EnergyItem","value","energyItem","energyName","energyList","calories","proteins","fat","carbohydrates","length","ingredientDetails","ingredientImage","image_large","ingredientName","ingredientEnergy","energy","index","getScrollBoxHeight","container","scrollBoxClass","containerHeight","offsetHeight","heightRemainingElements","childNodes","forEach","el","indexOf","window","getComputedStyle","margin","parseFloat","Math","ceil","getAbsoluteHeight","BurgerIngredients","dispatch","useDispatch","ingredients","useSelector","state","burgerIngredientsRef","burgerIngredientsScrollRef","setBurgerIngredientsScrollHeight","height","current","getCategory","useMemo","push","bunsCategoryRef","saucesCategoryRef","toppingsCategoryRef","categoriesList","currentTab","setCurrentTab","getCurrentCategory","scrollDistance","scrollTop","heightOfOtherContent","offsetTop","category","categoryTopPosition","shownIngredient","showIngredientModal","burgerIngredients","burgerIngredientsTabs","active","burgerIngredientsScroll","Object","keys","addIngredient","removeIngredient","sortIngredient","clearConstructor","getOrderId","ids","method","headers","body","JSON","stringify","clearOrderId","SelectedIngredientCard","text","thumbnail","handleClose","handleSort","drag","useDrop","accept","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","selectedIngredient","OrderDetails","orderId","orderDetails","orderDetailsId","orderDetailsIdValue","orderDetailsIdHint","orderDoneImg","orderDetailsDone","DragHere","dragging","dragHere","dragHereHover","dragHereText","dragHereImg","Loader","loader","color","width","BurgerConstructor","selectedIngredients","burgerConstructor","selectedBun","find","burgerConstructorRef","burgerConstructorScrollRef","setBurgerConstructorScrollHeight","isDropping","isOver","getState","dropTarget","handleRemoveIngredient","handleSortIngredient","order","orderPending","totalPrice","result","reduce","priceSum","lockedBun","isLocked","burgerConstructorScroll","burgerConstructorOrder","burgerConstructorTotal","disabled","App","ingredientsPending","ingredientsFulfilled","ingredientsRejected","main","DndProvider","backend","HTML5Backend","ingredientsReducer","createReducer","builder","addCase","pending","fulfilled","action","payload","rejected","ingredientIndex","findIndex","selectedInredient","hasBun","bunIndex","countSameIngredients","filter","dragIngredient","splice","ingredientReducer","orderReducer","orderFulfilled","orderRejected","number","rootReducer","combineReducers","store","configureStore","reducer","middleware","thunk","devTools","render","StrictMode"],"mappings":"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","file":"static/js/main.1debe552.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"ingredient-details_ingredientDetails__1U301\",\"ingredientName\":\"ingredient-details_ingredientName__332ky\",\"ingredientEnergy\":\"ingredient-details_ingredientEnergy__m5ngE\",\"energyItem\":\"ingredient-details_energyItem__1Q5XB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2xdBF\",\"modalTitle\":\"modal_modalTitle__2bTt0\",\"modalContent\":\"modal_modalContent__2Wo6G\",\"modalCloseIcon\":\"modal_modalCloseIcon__2keZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructor\":\"burger-constructor_burgerConstructor__1l9NC\",\"burgerConstructorScroll\":\"burger-constructor_burgerConstructorScroll__dWTc4\",\"lockedBun\":\"burger-constructor_lockedBun__2pjBU\",\"burgerConstructorOrder\":\"burger-constructor_burgerConstructorOrder__2okv2\",\"burgerConstructorTotal\":\"burger-constructor_burgerConstructorTotal__2lA1c\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const API_PATH = process.env.REACT_APP_API_PATH\r\n\r\n// endpoints\r\nexport const INGREDIENTS = 'ingredients'\r\nexport const ORDERS = 'orders'\r\n\r\nconst checkReponse = (res) => {\r\n  return res.ok\r\n    ? res.json()\r\n    : res.json().then((err) => Promise.reject(err))\r\n}\r\n\r\nexport function sendRequest(endpoint, options) {\r\n  return fetch(`${API_PATH}/${endpoint}`, options)\r\n   .then(checkReponse)\r\n}","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { sendRequest, INGREDIENTS } from \"../../utils/api-helper\"\r\n\r\nexport const getIngredients = createAsyncThunk(\r\n  'ingredients/getIngredients',\r\n  async() => sendRequest(INGREDIENTS)\r\n)\r\n\r\nexport const incrementIngredientCount = createAction('ingredients/incrementIngredientCount')\r\nexport const decrementIngredientCount = createAction('ingredients/decrementIngredientCount')\r\nexport const clearIngredientsCounters = createAction('ingredients/clearIngredientsCounters')","import propTypes from 'prop-types';\r\nimport styles from './menu.module.css';\r\n\r\nexport default function Menu ({children}) {\r\n  return (\r\n    <nav className={styles.menu}>\r\n      <ul className={styles.menuList}>\r\n        {children}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: propTypes.node.isRequired,\r\n}","import { useState } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport styles from './menu-link.module.css'\r\n\r\nexport default function MenuLink ({name, icon, iconHover, first, last}) {\r\n  const [isHover, setHover] = useState(false)\r\n\r\n  const handleLinkMouseEnter = () => setHover(!isHover)\r\n  const handleLinkMouseLeave = () => setHover(!isHover)\r\n\r\n  return (\r\n    <a\r\n      className={clsx(\r\n        styles.menuLink,\r\n        !first && 'pl-4',\r\n        !last && 'pr-4',\r\n        'pt-4', 'pb-4',\r\n        'text', 'text_type_main-default',\r\n      )}\r\n      href=\"/home\"\r\n      onMouseEnter={handleLinkMouseEnter}\r\n      onMouseLeave={handleLinkMouseLeave}\r\n    >\r\n      <span className={clsx(\r\n        styles.menuLinkIcon,\r\n        'mr-2',\r\n      )}>\r\n        {isHover ? iconHover : icon}\r\n      </span>\r\n      <span className={styles.menuLinkName}>{name}</span>\r\n    </a>\r\n  )\r\n}\r\n\r\nMenuLink.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  icon: propTypes.element.isRequired,\r\n  iconHover: propTypes.element.isRequired,\r\n  first: propTypes.bool,\r\n  last: propTypes.bool,\r\n}","import clsx from 'clsx'\r\nimport styles from './app-header.module.css'\r\n\r\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport Menu from '../menu/menu'\r\nimport MenuLink from '../menu-link/menu-link'\r\n\r\nexport default function AppHeader() {\r\n  return (\r\n    <header className={clsx(\r\n      styles.appHeader,\r\n      'mt-10',\r\n    )}>\r\n      <Menu>\r\n        <li>\r\n          <MenuLink\r\n            name=\"Конструктор\"\r\n            icon={<BurgerIcon type=\"primary\"/>}\r\n            iconHover={<BurgerIcon type=\"secondary\"/>}\r\n            first\r\n          />\r\n        </li>\r\n        <li>\r\n          <MenuLink\r\n            name=\"Лента заказов\"\r\n            icon={<ListIcon type=\"primary\"/>}\r\n            iconHover={<ListIcon type=\"secondary\"/>}\r\n          />\r\n        </li>\r\n      </Menu>\r\n      <a className={styles.logo} href=\"/home\"><Logo/></a>\r\n      <MenuLink\r\n        name=\"Личный кабинет\"\r\n        icon={<ProfileIcon type=\"primary\" />}\r\n        iconHover={<ProfileIcon type=\"secondary\"/>}\r\n        last\r\n      />\r\n    </header>\r\n  )\r\n}","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const setShownIngredient = createAction('ingredient/setDisplayedIngredient')\r\nexport const unsetShownIngredient = createAction('ingredient/unsetDisplayedIngredient')","import clsx from 'clsx'\r\nimport propTypes from 'prop-types'\r\nimport ReactDOM from 'react-dom'\r\nimport styles from './modal-overlay.module.css'\r\n\r\nconst modalRoot = document.getElementById(\"react-modal\")\r\n\r\nexport default function ModalOverlay({children, onClose, noBlackout}) {\r\n\tconst handleClickOverlay = (e) => {\r\n\t\tif (onClose && e.target.classList.contains(styles.modalOverlay)) {\r\n\t\t\tonClose()\r\n\t\t}\r\n\t}\r\n\r\n\treturn ReactDOM.createPortal(\r\n\t\t(\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(\r\n\t\t\t\t\tstyles.modalOverlay,\r\n\t\t\t\t\tnoBlackout && styles.modalOverlayNoBlackout,\r\n\t\t\t\t)}\r\n\t\t\t\tonClick={handleClickOverlay}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t)\r\n\t, modalRoot)\r\n}\r\n\r\nModalOverlay.propTypes = {\r\n\tchildren: propTypes.node.isRequired,\r\n\tonClose: propTypes.func,\r\n  noBlackout: propTypes.bool,\r\n}","import { useRef, useEffect } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport styles from './modal.module.css'\r\n\r\nimport ModalOverlay from '../modal-overlay/modal-overlay'\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nexport default function Modal({children, title, onClose}) {\r\n\tconst modalRef = useRef(null)\r\n\r\n\tconst handleEscClose = (e) => {\r\n\t\tif (e.keyCode === 27) onClose()\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener('keydown', handleEscClose)\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('keydown', handleEscClose)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<ModalOverlay onClose={onClose}>\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(\r\n\t\t\t\t\tstyles.modal,\r\n\t\t\t\t\ttitle ? 'pt-10 pb-15' : 'pt-30 pb-30',\r\n\t\t\t\t)}\r\n\t\t\t\tref={modalRef}\r\n\t\t\t>\r\n\t\t\t\t{!title && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={styles.modalCloseIcon}\r\n\t\t\t\t\t\tonClick={onClose}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseIcon type=\"primary\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t\t{title && (\r\n\t\t\t\t\t<p className={clsx(\r\n\t\t\t\t\t\tstyles.modalTitle,\r\n\t\t\t\t\t\t'text', 'text_type_main-large',\r\n\t\t\t\t\t\t'pl-10', 'pr-10',\r\n\t\t\t\t\t)}>\r\n\t\t\t\t\t\t<span className={styles.modalTitleText}>{title}</span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={styles.modalTitleIcon}\r\n\t\t\t\t\t\t\tonClick={onClose}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CloseIcon type=\"primary\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className={styles.modalContent}>{children}</div>\r\n\t\t\t</div>\r\n\t\t</ModalOverlay>\r\n\t)\r\n}\r\n\r\nModal.propTypes = {\r\n\tchildren: propTypes.node.isRequired,\r\n\ttitle: propTypes.string,\r\n\tonClose: propTypes.func.isRequired,\r\n}","import propTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport styles from './ingredient-card.module.css'\r\n\r\nimport { useDrag } from 'react-dnd'\r\n\r\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nexport default function IngredientCard({id, count, img, price, name, onShow}) {\r\n  const [{ opacity }, ref] = useDrag({\r\n    type: 'ingredient',\r\n    item: { id },\r\n    collect: monitor => ({\r\n      opacity: monitor.isDragging() ? 0.5 : 1\r\n    })\r\n  });\r\n  return (\r\n    <div\r\n      className={styles.ingredientCard}\r\n      ref={ref}\r\n      style={{opacity}}\r\n      onClick={onShow}\r\n    >\r\n      <img className={styles.ingredientCardImage} src={img} alt={name} />\r\n      <p className={clsx(\r\n        styles.ingredientCardPrice,\r\n        'text', 'text_type_digits-default',\r\n        'pt-1', 'pb-1',\r\n      )}>\r\n        <span className=\"mr-2\">{price}</span>\r\n        <CurrencyIcon type=\"primary\" />\r\n      </p>\r\n      <p className={clsx(\r\n        styles.ingredientCardName,\r\n        'text', 'text_type_main-default',\r\n        'pt-1',\r\n      )}>{name}</p>\r\n      { count > 0 && (\r\n        <Counter count={count} size=\"default\" />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nIngredientCard.propTypes = {\r\n  id: propTypes.string.isRequired,\r\n  count: propTypes.number,\r\n  img: propTypes.string.isRequired,\r\n  price: propTypes.number.isRequired,\r\n  name: propTypes.string.isRequired,\r\n  onShow: propTypes.func.isRequired,\r\n}","import { forwardRef } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport styles from './ingredients-category.module.css'\r\n\r\nimport IngredientCard from '../ingredient-card/ingredient-card'\r\n\r\nconst IngredientsCategory = forwardRef(({name, data, onCardShow}, ref) => {\r\n  return (\r\n    <div className={styles.ingredientsCategory} ref={ref}>\r\n      <h2 className=\"text text_type_main-medium\">{name}</h2>\r\n      <div className={clsx(\r\n        styles.ingredientsCategoryContainer,\r\n        'pt-6', 'pb-10', 'pl-4', 'pr-2',\r\n      )}>\r\n        {data.map((ingredient) => {\r\n          return (\r\n            <IngredientCard\r\n              id={ingredient._id}\r\n              img={ingredient.image}\r\n              price={ingredient.price}\r\n              name={ingredient.name}\r\n              count={ingredient.count}\r\n              key={ingredient._id}\r\n              onShow={() => onCardShow(ingredient)}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nIngredientsCategory.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  data: propTypes.array.isRequired,\r\n  onCardShow: propTypes.func.isRequired,\r\n}\r\n\r\nexport default IngredientsCategory","import propTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport styles from './ingredient-details.module.css'\r\n\r\nexport default function IngredientDetails({data}) {\r\n  const EnergyItem = ({name, value}) => {\r\n    return (\r\n      <div className={styles.energyItem}>\r\n        <span className={clsx(\r\n          styles.energyName,\r\n          'text', 'text_type_main-default', 'text_color_inactive',\r\n          'mb-2',\r\n        )}>{name}</span>\r\n        <span className={clsx(\r\n          styles.energyItem,\r\n          'text', 'text_type_digits-default', 'text_color_inactive',\r\n        )}>{value}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const energyList = [\r\n    {\r\n      name: 'Калории,ккал',\r\n      value: data.calories,\r\n    },\r\n    {\r\n      name: 'Белки,г',\r\n      value: data.proteins,\r\n    },\r\n    {\r\n      name: 'Жиры,г',\r\n      value: data.fat,\r\n    },\r\n    {\r\n      name: 'Углеводы,г',\r\n      value: data.carbohydrates,\r\n    },\r\n  ]\r\n\r\n  if (data.length < 0) return null\r\n\r\n  return (\r\n    <div className={styles.ingredientDetails}>\r\n      <img\r\n        className={clsx(\r\n          styles.ingredientImage,\r\n          'mb-4',\r\n        )}\r\n        src={data.image_large}\r\n        alt={data.name}\r\n      />\r\n      <p className={clsx(\r\n        styles.ingredientName,\r\n        'text', 'text_type_main-medium',\r\n        'mb-8',\r\n      )}>{data.name}</p>\r\n      <div className={styles.ingredientEnergy}>\r\n        {energyList.map((energy, index) => (\r\n          <EnergyItem\r\n            name={energy.name}\r\n            value={energy.value}\r\n            key={index}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nIngredientDetails.propTypes = {\r\n  data: propTypes.shape({\r\n    image_large: propTypes.string.isRequired,\r\n    name: propTypes.string.isRequired,\r\n    calories: propTypes.number.isRequired,\r\n    proteins: propTypes.number.isRequired,\r\n    fat: propTypes.number.isRequired,\r\n    carbohydrates: propTypes.number.isRequired,\r\n  }).isRequired,\r\n}","export const getAbsoluteHeight = (el) => {\r\n\tconst styles = window.getComputedStyle(el);\r\n\tconst margin = parseFloat(styles['marginTop']) +\r\n\t\tparseFloat(styles['marginBottom']);\r\n\r\n\treturn Math.ceil(el.offsetHeight + margin);\r\n}\r\n\r\nexport const getScrollBoxHeight = (container, scrollBoxClass) => {\r\n\tconst containerHeight = container.offsetHeight\r\n\tlet heightRemainingElements = 0\r\n\r\n\tcontainer.childNodes.forEach(el => {\r\n\t\tif (el.className.indexOf(scrollBoxClass) === -1) {\r\n\t\t\theightRemainingElements += getAbsoluteHeight(el)\r\n\t\t}\r\n\t});\r\n\r\n\treturn (containerHeight - heightRemainingElements) + 'px'\r\n}\r\n","import { useState, useEffect, useRef, useMemo } from 'react'\r\nimport clsx from 'clsx'\r\nimport styles from './burger-ingredients.module.css'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  setShownIngredient,\r\n  unsetShownIngredient,\r\n} from '../../store/actions/ingredient'\r\n\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport Modal from '../modal/modal';\r\nimport IngredientsCategory from '../ingredients-category/ingredients-category'\r\nimport IngredientDetails from '../ingredient-details/ingredient-details'\r\n\r\nimport { getScrollBoxHeight } from '../../utils/methods'\r\n\r\nexport default function BurgerIngredients() {\r\n  const dispatch = useDispatch()\r\n\r\n  // get ingredients from store\r\n  const ingredients = useSelector(state => state.ingredients.data)\r\n\r\n  // height of BurgerIngredients\r\n  const burgerIngredientsRef = useRef(null)\r\n  const burgerIngredientsScrollRef = useRef(null)\r\n\r\n  const setBurgerIngredientsScrollHeight = () => {\r\n    const height = getScrollBoxHeight(burgerIngredientsRef.current, 'burgerIngredientsScroll')\r\n    burgerIngredientsScrollRef.current.style.height = height\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBurgerIngredientsScrollHeight()\r\n    window.addEventListener('resize', setBurgerIngredientsScrollHeight)\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', setBurgerIngredientsScrollHeight)\r\n    }\r\n  }, [])\r\n\r\n\r\n  // categories\r\n  const getCategory = useMemo(() => (type) => {\r\n    const res = []\r\n    ingredients.forEach((ingredient) => {\r\n      if (ingredient.type === type) res.push(ingredient)\r\n    })\r\n    return res\r\n  }, [ingredients])\r\n\r\n  const bunsCategoryRef = useRef()\r\n  const saucesCategoryRef = useRef()\r\n  const toppingsCategoryRef = useRef()\r\n\r\n  const categoriesList = useMemo(() => [\r\n    {\r\n      name: 'Булки',\r\n      value: 'buns',\r\n      data: getCategory('bun'),\r\n      ref: bunsCategoryRef,\r\n    },\r\n    {\r\n      name: 'Соусы',\r\n      value: 'sauces',\r\n      data: getCategory('sauce'),\r\n      ref: saucesCategoryRef,\r\n    },\r\n    {\r\n      name: 'Начинка',\r\n      value: 'toppings',\r\n      data: getCategory('main'),\r\n      ref: toppingsCategoryRef,\r\n    },\r\n  ], [getCategory])\r\n\r\n\r\n  // tabs\r\n  const [currentTab, setCurrentTab] = useState('')\r\n\r\n  // баги\r\n\r\n  // const goToCategory = (categoryName) => {\r\n  //   const relativeTop = burgerIngredientsScrollRef.current.offsetTop\r\n  //   const scrollTo = {}\r\n  //   categoriesList.forEach((category) => {\r\n  //     scrollTo[category.value] = () => {\r\n  //       burgerIngredientsScrollRef.current.scrollTo({\r\n  //         behavior: 'smooth',\r\n  //         top: category.ref.current.offsetTop - relativeTop,\r\n  //       })\r\n  //     }\r\n  //   })\r\n\r\n  //   scrollTo[categoryName]()\r\n  // }\r\n\r\n  const getCurrentCategory = useMemo(() => () => {\r\n    const scrollDistance = burgerIngredientsScrollRef.current.scrollTop\r\n    const heightOfOtherContent = burgerIngredientsScrollRef.current.offsetTop\r\n    categoriesList.forEach((category) => {\r\n      const categoryTopPosition = category.ref.current.offsetTop - heightOfOtherContent\r\n      if (\r\n        scrollDistance >= categoryTopPosition\r\n        && scrollDistance <= categoryTopPosition + category.ref.current.offsetHeight\r\n        && currentTab !== category.value\r\n      ) {\r\n        setCurrentTab(category.value)\r\n      }\r\n    })\r\n  },[categoriesList, currentTab])\r\n\r\n  useEffect(() => {\r\n    getCurrentCategory()\r\n    burgerIngredientsScrollRef.current.addEventListener('scroll', () => getCurrentCategory())\r\n  },[getCurrentCategory])\r\n\r\n\r\n  // ingredient details\r\n  const shownIngredient = useSelector(state => state.ingredient.data)\r\n\r\n  const showIngredientModal = (ingredient) => {\r\n    dispatch(setShownIngredient(ingredient))\r\n  }\r\n\r\n  const closeIngredientModal = () => {\r\n    dispatch(unsetShownIngredient())\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className={styles.burgerIngredients} ref={burgerIngredientsRef}>\r\n        <h1 className={clsx(\r\n          'text', 'text_type_main-large',\r\n          'pt-10',\r\n        )}>Соберите бургер</h1>\r\n        <div className={clsx(\r\n          styles.burgerIngredientsTabs,\r\n          'mt-5',\r\n        )}>\r\n          {categoriesList.map((category, index) => (\r\n            <Tab\r\n              value={category.value}\r\n              active={currentTab === category.value}\r\n              key={index}\r\n              // onClick={() => goToCategory(category.value)}\r\n            >{category.name}</Tab>\r\n          ))}\r\n        </div>\r\n        <div\r\n          className={clsx(\r\n            styles.burgerIngredientsScroll,\r\n            'mt-10',\r\n          )}\r\n          ref={burgerIngredientsScrollRef}\r\n        >\r\n          {categoriesList.map((category, index) => (\r\n            <IngredientsCategory\r\n              name={category.name}\r\n              data={category.data}\r\n              ref={category.ref}\r\n              key={index}\r\n              onCardShow={showIngredientModal}\r\n            />\r\n          ))}\r\n        </div>\r\n      </section>\r\n      {Object.keys(shownIngredient).length > 0 && (\r\n        <Modal\r\n          title=\"Детали ингредиента\"\r\n          onClose={closeIngredientModal}\r\n        >\r\n          <IngredientDetails\r\n            data={shownIngredient}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const addIngredient = createAction('burgerConstructor/addIngredient')\r\nexport const removeIngredient = createAction('burgerConstructor/removeIngredient')\r\nexport const sortIngredient = createAction('burgerConstructor/sortIngredient')\r\nexport const clearConstructor = createAction('burgerConstructor/clearConstructor')\r\n\r\nexport const moveIngredient = (item) => (dispatch, getState) => {\r\n  const ingredients = getState().ingredients.data\r\n  const selectedIngredient = ingredients.find((ingredient) => {\r\n    return ingredient._id === item.id\r\n  })\r\n  dispatch(addIngredient(selectedIngredient));\r\n};\r\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { sendRequest, ORDERS } from \"../../utils/api-helper\"\r\n\r\nexport const getOrderId = createAsyncThunk(\r\n  'order/getOrderId',\r\n  async(ids) => sendRequest(ORDERS, {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify(ids),\r\n  })\r\n)\r\n\r\nexport const clearOrderId = createAction('order/clearOrder')","import { useRef } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport styles from './selected-ingredient-card.module.css'\r\n\r\nimport { useDrag, useDrop } from 'react-dnd'\r\n\r\nimport { ConstructorElement, DragIcon} from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nexport default function SelectedIngredientCard({\r\n  id,\r\n  count,\r\n  index,\r\n  text,\r\n  price,\r\n  thumbnail,\r\n  handleClose,\r\n  handleSort\r\n}) {\r\n  const ref = useRef(null)\r\n  const [{isDragging}, drag] = useDrag({\r\n    type: 'selectedIngredient',\r\n    item: { id , index },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  })\r\n\r\n  const [, drop] = useDrop({\r\n    accept: 'selectedIngredient',\r\n    hover: (item, monitor) => {\r\n      const dragIndex = item.index\r\n      const hoverIndex = index\r\n\r\n      if (dragIndex === hoverIndex) return\r\n\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n      const clientOffset = monitor.getClientOffset()\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n          return\r\n      }\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n          return\r\n      }\r\n\r\n      handleSort(id, dragIndex, hoverIndex)\r\n\r\n      item.index = hoverIndex\r\n    },\r\n  })\r\n  drag(drop(ref))\r\n  const opacity = isDragging ? 0.3 : 1;\r\n  return (\r\n    <div className={styles.selectedIngredient} ref={ref} style={{opacity}}>\r\n      <DragIcon type=\"primary\" />\r\n      <ConstructorElement\r\n        text={text}\r\n        price={price}\r\n        thumbnail={thumbnail}\r\n        handleClose={() => handleClose(id, count)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nSelectedIngredientCard.propTypes = {\r\n  id: propTypes.string.isRequired,\r\n  count: propTypes.number.isRequired,\r\n  index: propTypes.number.isRequired,\r\n  text: propTypes.string.isRequired,\r\n  price: propTypes.number.isRequired,\r\n  thumbnail: propTypes.string.isRequired,\r\n  handleClose: propTypes.func.isRequired,\r\n  handleSort: propTypes.func.isRequired,\r\n}","export default __webpack_public_path__ + \"static/media/order-done.fb9f8534.svg\";","import clsx from 'clsx'\r\nimport propTypes from 'prop-types'\r\nimport styles from './order-details.module.css'\r\n\r\nimport orderDoneImg from '../../images/order-done.svg'\r\n\r\nexport default function OrderDetails({orderId}) {\r\n  return (\r\n    <div className={styles.orderDetails}>\r\n      <p className={clsx(\r\n        styles.orderDetailsId,\r\n        'mb-15',\r\n      )}>\r\n        <span className={clsx(\r\n          styles.orderDetailsIdValue,\r\n          'text', 'text_type_digits-large',\r\n          'mb-8',\r\n        )}>{orderId}</span>\r\n        <span className={clsx(\r\n          styles.orderDetailsIdHint,\r\n          'text', 'text text_type_main-medium',\r\n        )}>идентификатор заказа</span>\r\n      </p>\r\n      <img\r\n        className=\"mb-15\"\r\n        src={orderDoneImg}\r\n        alt=\"Order done\"\r\n      />\r\n      <p className={styles.orderDetailsDone}>\r\n        <span className={clsx(\r\n          'text', 'text text_type_main-small',\r\n          'mb-2',\r\n        )}>Ваш заказ начали готовить</span>\r\n        <span className={clsx(\r\n          'text', 'text text_type_main-small', 'text_color_inactive',\r\n        )}>Дождитесь готовности на орбитальной станции</span>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nOrderDetails.propTypes = {\r\n  orderId: propTypes.number,\r\n}","export default __webpack_public_path__ + \"static/media/drag-here.04833764.svg\";","import propTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport styles from './drag-here.module.css'\r\nimport dragHereImg from '../../images/drag-here.svg'\r\n\r\nexport default function DragHere({ dragging }) {\r\n  return (\r\n    <div className={clsx(styles.dragHere,)}>\r\n      <div className={clsx(dragging && styles.dragHereHover)}>\r\n        <p className={clsx(\r\n          styles.dragHereText,\r\n          'mb-10',\r\n          'text', 'text_type_main-large',\r\n        )}>Cюда</p>\r\n        <img\r\n          className={styles.dragHereImg}\r\n          src={dragHereImg}\r\n          alt='drag-here'\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nDragHere.propTypes = {\r\n  dragging: propTypes.bool,\r\n}","import propTypes from 'prop-types'\r\nimport styles from './loader.module.css'\r\n\r\nimport ModalOverlay from '../modal-overlay/modal-overlay'\r\nimport LoaderSpinner from 'react-loader-spinner'\r\n\r\nexport default function Loader ({noBlackout}) {\r\n  return (\r\n    <ModalOverlay noBlackout={noBlackout}>\r\n      <LoaderSpinner\r\n        className={styles.loader}\r\n        type=\"Puff\"\r\n        color=\"#8585AD\"\r\n        height={70}\r\n        width={70}\r\n      />\r\n    </ModalOverlay>\r\n  )\r\n}\r\n\r\nLoader.propTypes = {\r\n  noBlackout: propTypes.bool,\r\n}","import { useRef, useEffect, useMemo } from 'react'\r\nimport clsx from 'clsx'\r\nimport styles from './burger-constructor.module.css'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  moveIngredient,\r\n  removeIngredient,\r\n  sortIngredient,\r\n  clearConstructor\r\n} from '../../store/actions/burgerConstructor'\r\nimport {\r\n  decrementIngredientCount,\r\n  incrementIngredientCount,\r\n  clearIngredientsCounters\r\n} from '../../store/actions/ingredients'\r\nimport { getOrderId, clearOrderId } from '../../store/actions/order'\r\n\r\nimport { useDrop } from 'react-dnd'\r\n\r\nimport { ConstructorElement, Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport SelectedIngredientCard from '../selected-ingredient-card/selected-ingredient-card'\r\nimport Modal from '../modal/modal'\r\nimport OrderDetails from '../order-details/order-details'\r\nimport DragHere from '../drag-here/drag-here'\r\nimport Loader from '../loader/loader'\r\n\r\nimport { getScrollBoxHeight } from '../../utils/methods'\r\n\r\nexport default function BurgerConstructor() {\r\n  const dispatch = useDispatch()\r\n\r\n  // get ingredients from store\r\n  const selectedIngredients = useSelector(state => state.burgerConstructor.data)\r\n  const selectedBun = selectedIngredients.find((ingredient) => {\r\n    return ingredient.type === 'bun'\r\n  })\r\n\r\n\r\n  // height of BurgerConstructor\r\n  const burgerConstructorRef = useRef(null)\r\n  const burgerConstructorScrollRef = useRef(null)\r\n\r\n  const setBurgerConstructorScrollHeight = () => {\r\n    const height = getScrollBoxHeight(burgerConstructorRef.current, 'burgerConstructorScroll')\r\n    burgerConstructorScrollRef.current.style.height = height\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBurgerConstructorScrollHeight()\r\n  }, [selectedIngredients])\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', setBurgerConstructorScrollHeight)\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', setBurgerConstructorScrollHeight)\r\n    }\r\n  }, [])\r\n\r\n\r\n  // dnd\r\n  const [{isDropping}, dropTarget] = useDrop({\r\n    accept: 'ingredient',\r\n    collect: monitor => ({\r\n      isDropping: monitor.isOver()\r\n    }),\r\n    drop(id) {\r\n      dispatch(moveIngredient(id))\r\n      dispatch(incrementIngredientCount(id))\r\n    }\r\n  })\r\n\r\n\r\n  // ingredient\r\n  const handleRemoveIngredient = (id, index) => {\r\n    dispatch(removeIngredient({id, index}))\r\n    dispatch(decrementIngredientCount(id))\r\n  }\r\n\r\n  const handleSortIngredient = (id, dragIndex, hoverIndex) => {\r\n    dispatch(sortIngredient({ id, dragIndex, hoverIndex }))\r\n  }\r\n\r\n\r\n  // order\r\n  const {\r\n    orderId,\r\n    orderPending,\r\n  } = useSelector(state => {\r\n    return {\r\n      orderId: state.order.orderId,\r\n      orderPending: state.order.orderPending,\r\n    }\r\n  })\r\n\r\n  const getIngredientsIds = () => {\r\n    const ingredientsIds = selectedIngredients.map((ingredient) => {\r\n      return ingredient._id\r\n    })\r\n\r\n    return { \"ingredients\": ingredientsIds, }\r\n  }\r\n\r\n  const showOrderModal = () => {\r\n    const ids = getIngredientsIds()\r\n    dispatch(getOrderId(ids))\r\n  }\r\n\r\n  const closeOrderModal = () => {\r\n    dispatch(clearOrderId())\r\n    dispatch(clearConstructor())\r\n    dispatch(clearIngredientsCounters())\r\n  }\r\n\r\n\r\n  // total\r\n  const totalPrice = useMemo(() => {\r\n    let result = selectedIngredients.reduce((priceSum, ingredient) => {\r\n      return ingredient.type !== 'bun'\r\n        ? priceSum += +ingredient.price\r\n        : priceSum\r\n    }, 0)\r\n    if (selectedBun) result += selectedBun.price * 2\r\n    return result;\r\n  }, [selectedIngredients, selectedBun])\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        className={clsx(\r\n          'mt-25', 'mb-10',\r\n        )}\r\n        ref={dropTarget}\r\n      >\r\n        <div\r\n          className={styles.burgerConstructor}\r\n          ref={burgerConstructorRef}\r\n        >\r\n          {selectedIngredients.length === 0 && (<DragHere dragging={isDropping}/>)}\r\n          {selectedBun && (\r\n            <div className={clsx(\r\n              styles.lockedBun,\r\n              'mb-2', 'mr-2',\r\n            )}>\r\n              <ConstructorElement\r\n                type=\"top\"\r\n                isLocked={true}\r\n                text={selectedBun.name + \" (верх)\"}\r\n                price={selectedBun.price}\r\n                thumbnail={selectedBun.image}\r\n              />\r\n            </div>\r\n          )}\r\n          <div\r\n            className={clsx(\r\n              styles.burgerConstructorScroll,\r\n              'pl-4', 'pr-2',\r\n            )}\r\n            ref={burgerConstructorScrollRef}\r\n          >\r\n            {selectedIngredients.map((ingredient, index) => {\r\n              return ingredient.type !== 'bun'\r\n                ? (\r\n                  <SelectedIngredientCard\r\n                    id={ingredient._id}\r\n                    count={ingredient.index}\r\n                    index={index}\r\n                    text={ingredient.name}\r\n                    price={ingredient.price}\r\n                    thumbnail={ingredient.image_large}\r\n                    handleClose={handleRemoveIngredient}\r\n                    handleSort={handleSortIngredient}\r\n                    key={index}\r\n                  />\r\n                )\r\n                : null\r\n            })}\r\n          </div>\r\n          {selectedBun && (\r\n            <div className={clsx(\r\n              styles.lockedBun,\r\n              'mt-2', 'mr--4',\r\n            )}>\r\n              <ConstructorElement\r\n                type=\"bottom\"\r\n                isLocked={true}\r\n                text={selectedBun.name + \" (низ)\"}\r\n                price={selectedBun.price}\r\n                thumbnail={selectedBun.image}\r\n              />\r\n            </div>\r\n          )}\r\n          {selectedIngredients.length > 0 && (\r\n            <div className={clsx(\r\n              styles.burgerConstructorOrder,\r\n              'mt-10', 'pr-4',\r\n            )}>\r\n              <p className={clsx(\r\n                styles.burgerConstructorTotal,\r\n                'mr-10',\r\n              )}>\r\n                <span className={`text text_type_digits-medium mr-2`}>{totalPrice}</span>\r\n                <CurrencyIcon type=\"primary\" />\r\n              </p>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                disabled={!selectedBun}\r\n                onClick={showOrderModal}\r\n              >\r\n                Оформить заказ\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n      {orderPending && (<Loader />)}\r\n      {orderId && (\r\n        <Modal\r\n          onClose={closeOrderModal}\r\n        >\r\n          <OrderDetails orderId={orderId} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}","import { useEffect } from 'react'\r\nimport clsx from 'clsx'\r\nimport styles from './app.module.css'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getIngredients } from '../../store/actions/ingredients'\r\n\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\n\r\nimport AppHeader from '../app-header/app-header'\r\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients'\r\nimport BurgerConstructor from '../burger-constructor/burger-constructor'\r\nimport Loader from '../loader/loader'\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch()\r\n  const {\r\n    ingredientsPending,\r\n    ingredientsFulfilled,\r\n    ingredientsRejected,\r\n  } = useSelector(state => {\r\n    return {\r\n      ingredients: state.ingredients.data,\r\n      ingredientsPending: state.ingredients.ingredientsPending,\r\n      ingredientsFulfilled: state.ingredients.ingredientsFulfilled,\r\n      ingredientsRejected: state.ingredients.ingredientsRejected,\r\n    }\r\n  })\r\n  useEffect(() => {\r\n    dispatch(getIngredients())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <AppHeader/>\r\n      <main className={clsx(\r\n        styles.main,\r\n        'pb-10',\r\n      )}>\r\n        {ingredientsPending && (<Loader noBlackout/>)}\r\n        {ingredientsRejected && (<div>error</div>)}\r\n        {ingredientsFulfilled && (\r\n          <>\r\n            <DndProvider backend={HTML5Backend}>\r\n              <BurgerIngredients/>\r\n              <BurgerConstructor/>\r\n            </DndProvider>\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  getIngredients,\r\n  incrementIngredientCount,\r\n  decrementIngredientCount,\r\n  clearIngredientsCounters,\r\n} from \"../actions/ingredients\"\r\n\r\nconst initialState = {\r\n  data: [],\r\n  ingredientsPending: false,\r\n  ingredientsFulfilled: false,\r\n  ingredientsRejected: false,\r\n}\r\n\r\nconst ingredientsReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(getIngredients.pending, (state) => {\r\n      state.ingredientsPending = true\r\n    })\r\n    .addCase(getIngredients.fulfilled, (state, action) => {\r\n      state.data = action.payload.data\r\n      state.ingredientsFulfilled = true\r\n      state.ingredientsPending = false\r\n      state.ingredientsRejected = false\r\n    })\r\n    .addCase(getIngredients.rejected, (state) => {\r\n      state.ingredientsRejected = true\r\n      state.ingredientsPending = false\r\n    })\r\n    .addCase(incrementIngredientCount, (state, action) => {\r\n      const ingredientIndex = state.data.findIndex((ingredient) => {\r\n        return ingredient._id === action.payload.id\r\n      })\r\n      if (state.data[ingredientIndex].type !== 'bun') {\r\n        state.data[ingredientIndex].count > 0\r\n          ? state.data[ingredientIndex].count++\r\n          : state.data[ingredientIndex].count = 1\r\n      } else {\r\n        state.data.forEach(ingredient => {\r\n          if (ingredient.type === 'bun') ingredient.count = 0\r\n        })\r\n        state.data[ingredientIndex].count = 2\r\n      }\r\n    })\r\n    .addCase(decrementIngredientCount, (state, action) => {\r\n      const ingredientIndex = state.data.findIndex((ingredient) => {\r\n        return ingredient._id === action.payload\r\n      })\r\n      if (state.data[ingredientIndex].count) {\r\n        state.data[ingredientIndex].count--\r\n      }\r\n    })\r\n    .addCase(clearIngredientsCounters, (state) => {\r\n      state.data.forEach(ingredient => {\r\n        if (ingredient.count > 0) ingredient.count = 0\r\n      })\r\n    })\r\n})\r\n\r\nexport default ingredientsReducer","import { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport {\r\n  addIngredient,\r\n  removeIngredient,\r\n  sortIngredient,\r\n  clearConstructor,\r\n} from '../actions/burgerConstructor'\r\n\r\nconst initialState = {\r\n  data: [],\r\n}\r\n\r\nconst burgerConstructor = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(addIngredient, (state, action) => {\r\n      const selectedInredient = action.payload\r\n      const hasBun = state.data.find((ingredient) => {\r\n        return ingredient.type === 'bun'\r\n      })\r\n      if (selectedInredient.type === 'bun' && hasBun) {\r\n        const bunIndex = state.data.findIndex((ingredient) => {\r\n          return ingredient.type === 'bun'\r\n        })\r\n        state.data[bunIndex] = selectedInredient\r\n      } else {\r\n        const countSameIngredients = state.data.filter((ingredient) => {\r\n          return ingredient._id === selectedInredient._id\r\n        }).length\r\n        state.data.push({...selectedInredient, index: countSameIngredients})\r\n      }\r\n    })\r\n    .addCase(clearConstructor, (state, action) => {\r\n      state.data = []\r\n    })\r\n    .addCase(removeIngredient, (state, action) => {\r\n      state.data = state.data.filter((ingredient) => {\r\n        return !((ingredient._id === action.payload.id)\r\n          && (ingredient.index === action.payload.index))\r\n      })\r\n    })\r\n    .addCase(sortIngredient, (state, action) => {\r\n      const dragIngredient = state.data[action.payload.dragIndex]\r\n      state.data.splice(action.payload.dragIndex, 1)\r\n      state.data.splice(action.payload.hoverIndex, 0, dragIngredient)\r\n    })\r\n})\r\n\r\nexport default burgerConstructor","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  setShownIngredient,\r\n  unsetShownIngredient,\r\n} from '../actions/ingredient'\r\n\r\nconst initialState = {\r\n  data: {},\r\n}\r\n\r\nconst ingredientReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(setShownIngredient, (state, action) => {\r\n      state.data = action.payload\r\n    })\r\n    .addCase(unsetShownIngredient, (state) => {\r\n      state.data = {}\r\n    })\r\n})\r\n\r\nexport default ingredientReducer","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  getOrderId,\r\n  clearOrderId,\r\n} from '../actions/order'\r\n\r\nconst initialState = {\r\n  orderId: null,\r\n  orderPending: false,\r\n  orderFulfilled: false,\r\n  orderRejected: false,\r\n}\r\n\r\nconst orderReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(getOrderId.pending, (state) => {\r\n      state.orderPending = true\r\n    })\r\n    .addCase(getOrderId.fulfilled, (state, action) => {\r\n      state.orderId = action.payload.order.number\r\n      state.orderFulfilled = true\r\n      state.orderPending = false\r\n      state.orderRejected = false\r\n    })\r\n    .addCase(getOrderId.rejected, (state) => {\r\n      state.orderRejected = true\r\n      state.orderPending = false\r\n    })\r\n    .addCase(clearOrderId, (state) => {\r\n      state.orderId = null\r\n    })\r\n})\r\n\r\nexport default orderReducer","import { combineReducers } from 'redux'\r\n\r\nimport ingredients from './ingredients'\r\nimport burgerConstructor from './burgerConstructor'\r\nimport ingredient from './ingredient'\r\nimport order from './order'\r\n\r\nconst rootReducer = combineReducers({\r\n  ingredients,\r\n  burgerConstructor,\r\n  ingredient,\r\n  order,\r\n})\r\n\r\nexport default rootReducer","import { configureStore } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [thunk],\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n})\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport './index.css'\r\nimport App from './components/app/app'\r\n\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('react')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"order-details_orderDetails__SzQ0o\",\"orderDetailsId\":\"order-details_orderDetailsId__3xoSZ\",\"orderDetailsIdValue\":\"order-details_orderDetailsIdValue__FGLBa\",\"orderDetailsDone\":\"order-details_orderDetailsDone__1zjz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientCard\":\"ingredient-card_ingredientCard__1TtoZ\",\"ingredientCardPrice\":\"ingredient-card_ingredientCardPrice__33t2Z\",\"ingredientCardName\":\"ingredient-card_ingredientCardName__3sb3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dragHere\":\"drag-here_dragHere__1p0ri\",\"dragHereHover\":\"drag-here_dragHereHover__1KBeD\",\"dragHereText\":\"drag-here_dragHereText__3g25W\",\"dragHereImg\":\"drag-here_dragHereImg__2bMl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuLink\":\"menu-link_menuLink__3WnG-\",\"menuLinkIcon\":\"menu-link_menuLinkIcon__O0aCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerIngredients\":\"burger-ingredients_burgerIngredients__3z-iu\",\"burgerIngredientsTabs\":\"burger-ingredients_burgerIngredientsTabs__9bFuM\",\"burgerIngredientsScroll\":\"burger-ingredients_burgerIngredientsScroll__kPEBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__TOUdT\",\"modalOverlayNoBlackout\":\"modal-overlay_modalOverlayNoBlackout__1JusQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"app-header_appHeader__dsOcZ base_container__bLd8B\",\"logo\":\"app-header_logo__1WZQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuList\":\"menu_menuList___Wwi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsCategoryContainer\":\"ingredients-category_ingredientsCategoryContainer__1rKi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__1nksk base_container__bLd8B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedIngredient\":\"selected-ingredient-card_selectedIngredient__3ncBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__ZrHR_\"};"],"sourceRoot":""}